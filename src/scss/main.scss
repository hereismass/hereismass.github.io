@import 'reset';
@import 'variables';
@import 'breakpoints';

// fonts
@import url('https://fonts.googleapis.com/css?family=Raleway:300,400,700');

// functions
@function url-friendly-color($color) {
  @return '%23' + str-slice('#{$color}', 2, -1)
}

// base
html {
  box-sizing: border-box;
  scroll-behavior: smooth;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  background-image: linear-gradient(to top, $bg-gradient-1 , $bg-gradient-2),
    url('images/background.jpg');
  background-size: auto, cover;
  background-attachment: fixed;
  background-position: center;

  color: $text-color;
  font-family: 'Raleway', sans-serif;
  font-weight: $fw-normal;
  font-size: $fs-normal;
}

a {
  color: inherit;
  outline: 0;
  text-decoration: none;
  transition: color .2s;

  &:hover {
    color: $hover-color;
  }
}

#scrolldown {
  position: absolute;
  bottom: 5vh;
  left: 50%;
  transform: translate(-50%, 0);
  z-index: 10;
}

// header
header {
  width: 100vw;
  height: 95vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  h1 {
    font-weight: $fw-bold;
    font-size: $fs-big;
  }

  #socials {
    margin: 2vw;
    font-size: $fs-icons;

    a {
      padding: 0 5px;
    }
  }
}

section {
  article {
    padding: 5vw 15vw 10vw 15vw;
    display: flex;
    position: relative;

    &:before {
      background-repeat: no-repeat;
      background-size: 100% 100%;
      content: '';
      display: block;
      height: 5vw;
      position: absolute;
      top: -5vw;
      left: 0;
      width: 100%;
    }

    &:last-child {
      padding-bottom: 5vw;
    }

    .article-content {
      text-align: right;
      width: 100%;

      h3 {
        text-transform: uppercase;
        font-weight: $fw-bold;
        font-size: $fs-title;
        letter-spacing: 0.1vw;
        border-bottom: 2px solid $border-color;
        padding-bottom: 2vw;
        margin-bottom: 2vw;
      }

      p {
        line-height: 2;
        margin-bottom: 2vw;
      }

      a {
        text-transform: uppercase;
        font-weight: $fw-bold;
        letter-spacing: 0.1vw;
        

        i {
          padding-right: 0.5vw;
        }
      }

      & + .article-image {
        margin-left: 5vw;
      }
    }

    .article-image {
      flex-shrink: 0;
      width: 15vw;
      height: 15vw;
      img {
        border-radius: 50%;
        overflow: hidden;
        width: 100%;
      }
    }

    &:nth-child(odd) {
      .article-content {
        text-align: left;
        & + .article-image {
          margin-left: 0;
          margin-right: 5vw;
        }
      }
      .article-image {
        order: -1;
      }
    }
  }

  // bg-colors needs to have a even number of colors for this to work. 
  // todo: make it works with odd list
  @for $i from 1 through length($bg-colors) {
    article:nth-child(#{length($bg-colors)}n+#{$i}) {
      background: nth($bg-colors, $i);

      @if $i % 2 == 0 {
        &:before {
          box-shadow: inset 0 -1px 0 0 nth($bg-colors, $i), 0 1px 0 0 nth($bg-colors, $i);
          background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' preserveAspectRatio='none'%3E%3Cpolygon points='0,100 100,0 100,100' fill='#{url-friendly-color(nth($bg-colors, $i))}' /%3E%3C/svg%3E");
        }
      } @else {
        &:before {
          box-shadow: inset 0 -1px 0 0 nth($bg-colors, $i), 0 1px 0 0 nth($bg-colors, $i);
          background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' preserveAspectRatio='none'%3E%3Cpolygon points='0,0 0,100 100,100' fill='#{url-friendly-color(nth($bg-colors, $i))}' /%3E%3C/svg%3E")
        }
      }
    }
  }
}
